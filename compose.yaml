
services:
  api1:
    image: game-api
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: VideoGameAPI1
    ports:
      - 8080:8080
    depends_on:
      - mysql
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/VideoGameExchange
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
    networks:
      - game-network
  api2:
    image: game-api
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: VideoGameAPI2
    ports:
      - 8081:8080
    depends_on:
      - mysql
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/VideoGameExchange
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
    networks:
      - game-network
  api3:
    image: game-api
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: VideoGameAPI3
    ports:
      - 8082:8080
    depends_on:
      - mysql
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/VideoGameExchange
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
    networks:
      - game-network
  mysql:
    image: mysql:latest
    container_name: VideoGameDB
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=VideoGameExchange
    ports:
      - "3306:3306"
    networks:
      - game-network
    volumes:
      - VideoGameDBVolume:/var/lib/mysql
  nginx:
    image: nginx:latest
    volumes:
      - ./dockerConf/nginxDefault.conf:/etc/nginx/conf.d/default.conf
    container_name: VideoGameNginx
    ports:
      - 80:80
    depends_on:
      - api1
      - api2
      - api3
    networks:
      - game-network
networks:
  game-network:
    name: game-network
volumes:
  VideoGameDBVolume:
    name: VideoGameDBVolume
